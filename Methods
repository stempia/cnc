import java.util.*;
public class ConvMethods {

	//Minjun
	public String BtoD(String n) {
		char[] x = n.toCharArray();
		int result = 0;
		int power = 0;
		
		for(int i = x.length-1; i >= 0; i--) {
			result += Math.pow(2, power) * (x[i] - '0');
			power++;
		}
		
		return String.valueOf(result);
	}
	public String OtoD(String n) {
		char[] x = n.toCharArray();
		int result = 0;
		int power = 0;
		
		for(int i = x.length-1; i >= 0; i--) {
			result += Math.pow(8, power) * (x[i] - '0');
			power++;
		}
		
		return String.valueOf(result);
	}
	public String HtoD(String n) {
		char[] x = n.toCharArray();
		int result = 0;
		int power = 0;
		
		for(int i = x.length-1; i >= 0; i--) {
			result += Math.pow(16, power) * (x[i] - '0');
			power++;
		}
		
		return String.valueOf(result);
	}
	//Samuel
	public String DtoB(String n){
		int d = Integer.parseInt(n);
		String ans="";
		for(int i=0; d>=1; i++){
			int temp = d%2;
			ans= temp+ans;
			d=d/2;
		}
		return ans;
	}
	public String DtoO(String n){
		int d = Integer.parseInt(n);
		String ans="";
		for(int i=0; d>=1; i++){
			int temp = d%8;
			ans= temp+ans;
			d=d/8;
		}
		return ans;
	}
	public String DtoH(String n){
		int d = Integer.parseInt(n);
		String ans="";
		for(int i=0; d>=1; i++){
			int temp = d%16;
			ans= NtoL(temp)+ans;
			d=d/16;
		}
		return ans;
	}
	
	public String NtoL(int n){
		if(n == 10)
			return "A";
		else if(n == 11)
			return "B";
		else if(n == 12)
			return "C";
		else if(n == 13)
			return "D";
		else if(n == 14)
			return "E";
		else if(n ==15)
			return "F";
		else
			return n+"";
	}

	public String LtoN(String n){
		if(n.equals("A"))
			return "10";
		else if(n.equals("B"))
			return "11";
		else if(n.equals("C"))
			return "12";
		else if(n.equals("D"))
			return "13";
		else if(n.equals("E"))
			return "14";
		else if(n.equals("F"))
			return "15";
		else
			return n;
	}

}
